"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.__formula__ = __formula__;

/**
 * @param {function} zero number constructor for 0
 * @param {function} one number constructor for 1
 * @param {function} negativeone number constructor for -1
 * @param {function} add number addition binary operator
 * @param {function} mul number multiplication binary operator
 * @param {function} pow2 number squaring unary operator
 * @param {function} mul2 number multiplication by 2 unary operator
 * @param {function} mul5 number multiplication by 5 unary operator
 * @param {function} sub number subtraction binary operator
 * @param {function} shu number right shift binary operator
 */
function __formula__(zero, one, negativeone, add, mul, pow2, mul2, mul5, sub, shu) {
  /**
   * @param {nth} n > 0
   */
  var formula = function formula(n) {
    // The closed form formula for the nth Fibonacci numbers is,
    //
    //      _  ._. n               n
    //       \_|_/            \_|_/
    //         |       ___      |
    //         |                |
    //
    //     ___________________________
    //
    //      _  ._.
    //       \_|_/            \_|_/
    //         |       ___      |
    //         |                |
    //
    // where phi = 1 + sqrt(5) and psi = 1 - sqrt(5)
    //
    //
    var i, a, b, c, d, w, x, y, z, a2, b2, c2, d2, w2, x2, y2, z2; // phi = ( a + bi ) / 2 , psi = ( c + di ) / 2

    a = one();
    b = one();
    c = one();
    d = negativeone();
    w = one();
    x = zero();
    y = one();
    z = zero();
    i = n;

    while (true) {
      if (i % 2 === 1) {
        x2 = add(mul(a, x), mul(b, w));
        z2 = add(mul(c, z), mul(d, y));
        if (i === 1) break;
        w2 = add(mul(a, w), mul(mul5(b), x));
        y2 = add(mul(c, y), mul(mul5(d), z));
        w = w2;
        x = x2;
        y = y2;
        z = z2;
      }

      a2 = add(pow2(a), mul5(pow2(b)));
      b2 = mul2(mul(a, b));
      c2 = add(pow2(c), mul5(pow2(d)));
      d2 = mul2(mul(c, d));
      a = a2;
      b = b2;
      c = c2;
      d = d2;
      i >>>= 1;
    }

    return shu(sub(x2, z2), n);
  };

  return formula;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9mb3JtdWxhLmpzIl0sIm5hbWVzIjpbIl9fZm9ybXVsYV9fIiwiemVybyIsIm9uZSIsIm5lZ2F0aXZlb25lIiwiYWRkIiwibXVsIiwicG93MiIsIm11bDIiLCJtdWw1Iiwic3ViIiwic2h1IiwiZm9ybXVsYSIsIm4iLCJpIiwiYSIsImIiLCJjIiwiZCIsInciLCJ4IiwieSIsInoiLCJhMiIsImIyIiwiYzIiLCJkMiIsIncyIiwieDIiLCJ5MiIsInoyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7OztBQVlPLFNBQVNBLFdBQVQsQ0FBdUJDLElBQXZCLEVBQThCQyxHQUE5QixFQUFvQ0MsV0FBcEMsRUFBa0RDLEdBQWxELEVBQXdEQyxHQUF4RCxFQUE4REMsSUFBOUQsRUFBcUVDLElBQXJFLEVBQTRFQyxJQUE1RSxFQUFtRkMsR0FBbkYsRUFBeUZDLEdBQXpGLEVBQStGO0FBRXJHOzs7QUFHQSxNQUFJQyxPQUFPLEdBQUcsU0FBVkEsT0FBVSxDQUFXQyxDQUFYLEVBQWU7QUFFNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBLFFBQUlDLENBQUosRUFBUUMsQ0FBUixFQUFZQyxDQUFaLEVBQWdCQyxDQUFoQixFQUFvQkMsQ0FBcEIsRUFBd0JDLENBQXhCLEVBQTRCQyxDQUE1QixFQUFnQ0MsQ0FBaEMsRUFBb0NDLENBQXBDLEVBQXdDQyxFQUF4QyxFQUE2Q0MsRUFBN0MsRUFBa0RDLEVBQWxELEVBQXVEQyxFQUF2RCxFQUE0REMsRUFBNUQsRUFBaUVDLEVBQWpFLEVBQXNFQyxFQUF0RSxFQUEyRUMsRUFBM0UsQ0FwQjRCLENBc0I1Qjs7QUFFQWYsSUFBQUEsQ0FBQyxHQUFHWixHQUFHLEVBQVA7QUFBYWEsSUFBQUEsQ0FBQyxHQUFHYixHQUFHLEVBQVA7QUFDYmMsSUFBQUEsQ0FBQyxHQUFHZCxHQUFHLEVBQVA7QUFBYWUsSUFBQUEsQ0FBQyxHQUFHZCxXQUFXLEVBQWY7QUFFYmUsSUFBQUEsQ0FBQyxHQUFHaEIsR0FBRyxFQUFQO0FBQWFpQixJQUFBQSxDQUFDLEdBQUdsQixJQUFJLEVBQVI7QUFDYm1CLElBQUFBLENBQUMsR0FBR2xCLEdBQUcsRUFBUDtBQUFhbUIsSUFBQUEsQ0FBQyxHQUFHcEIsSUFBSSxFQUFSO0FBRWJZLElBQUFBLENBQUMsR0FBR0QsQ0FBSjs7QUFFQSxXQUFRLElBQVIsRUFBZTtBQUVkLFVBQUtDLENBQUMsR0FBRyxDQUFKLEtBQVUsQ0FBZixFQUFtQjtBQUVsQmMsUUFBQUEsRUFBRSxHQUFHdkIsR0FBRyxDQUFFQyxHQUFHLENBQUVTLENBQUYsRUFBTUssQ0FBTixDQUFMLEVBQWlCZCxHQUFHLENBQUVVLENBQUYsRUFBTUcsQ0FBTixDQUFwQixDQUFSO0FBQ0FXLFFBQUFBLEVBQUUsR0FBR3pCLEdBQUcsQ0FBRUMsR0FBRyxDQUFFVyxDQUFGLEVBQU1LLENBQU4sQ0FBTCxFQUFpQmhCLEdBQUcsQ0FBRVksQ0FBRixFQUFNRyxDQUFOLENBQXBCLENBQVI7QUFFQSxZQUFLUCxDQUFDLEtBQUssQ0FBWCxFQUFlO0FBRWZhLFFBQUFBLEVBQUUsR0FBR3RCLEdBQUcsQ0FBRUMsR0FBRyxDQUFFUyxDQUFGLEVBQU1JLENBQU4sQ0FBTCxFQUFpQmIsR0FBRyxDQUFFRyxJQUFJLENBQUVPLENBQUYsQ0FBTixFQUFjSSxDQUFkLENBQXBCLENBQVI7QUFDQVMsUUFBQUEsRUFBRSxHQUFHeEIsR0FBRyxDQUFFQyxHQUFHLENBQUVXLENBQUYsRUFBTUksQ0FBTixDQUFMLEVBQWlCZixHQUFHLENBQUVHLElBQUksQ0FBRVMsQ0FBRixDQUFOLEVBQWNJLENBQWQsQ0FBcEIsQ0FBUjtBQUVBSCxRQUFBQSxDQUFDLEdBQUdRLEVBQUo7QUFBU1AsUUFBQUEsQ0FBQyxHQUFHUSxFQUFKO0FBQVNQLFFBQUFBLENBQUMsR0FBR1EsRUFBSjtBQUFTUCxRQUFBQSxDQUFDLEdBQUdRLEVBQUo7QUFFM0I7O0FBRURQLE1BQUFBLEVBQUUsR0FBR2xCLEdBQUcsQ0FBRUUsSUFBSSxDQUFFUSxDQUFGLENBQU4sRUFBY04sSUFBSSxDQUFFRixJQUFJLENBQUVTLENBQUYsQ0FBTixDQUFsQixDQUFSO0FBQ0FRLE1BQUFBLEVBQUUsR0FBR2hCLElBQUksQ0FBRUYsR0FBRyxDQUFFUyxDQUFGLEVBQU1DLENBQU4sQ0FBTCxDQUFUO0FBRUFTLE1BQUFBLEVBQUUsR0FBR3BCLEdBQUcsQ0FBRUUsSUFBSSxDQUFFVSxDQUFGLENBQU4sRUFBY1IsSUFBSSxDQUFFRixJQUFJLENBQUVXLENBQUYsQ0FBTixDQUFsQixDQUFSO0FBQ0FRLE1BQUFBLEVBQUUsR0FBR2xCLElBQUksQ0FBRUYsR0FBRyxDQUFFVyxDQUFGLEVBQU1DLENBQU4sQ0FBTCxDQUFUO0FBRUFILE1BQUFBLENBQUMsR0FBR1EsRUFBSjtBQUFTUCxNQUFBQSxDQUFDLEdBQUdRLEVBQUo7QUFBU1AsTUFBQUEsQ0FBQyxHQUFHUSxFQUFKO0FBQVNQLE1BQUFBLENBQUMsR0FBR1EsRUFBSjtBQUUzQlosTUFBQUEsQ0FBQyxNQUFNLENBQVA7QUFFQTs7QUFFRCxXQUFPSCxHQUFHLENBQUVELEdBQUcsQ0FBRWtCLEVBQUYsRUFBT0UsRUFBUCxDQUFMLEVBQW1CakIsQ0FBbkIsQ0FBVjtBQUVBLEdBOUREOztBQWdFQSxTQUFPRCxPQUFQO0FBRUEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBwYXJhbSB7ZnVuY3Rpb259IHplcm8gbnVtYmVyIGNvbnN0cnVjdG9yIGZvciAwXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBvbmUgbnVtYmVyIGNvbnN0cnVjdG9yIGZvciAxXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBuZWdhdGl2ZW9uZSBudW1iZXIgY29uc3RydWN0b3IgZm9yIC0xXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBhZGQgbnVtYmVyIGFkZGl0aW9uIGJpbmFyeSBvcGVyYXRvclxuICogQHBhcmFtIHtmdW5jdGlvbn0gbXVsIG51bWJlciBtdWx0aXBsaWNhdGlvbiBiaW5hcnkgb3BlcmF0b3JcbiAqIEBwYXJhbSB7ZnVuY3Rpb259IHBvdzIgbnVtYmVyIHNxdWFyaW5nIHVuYXJ5IG9wZXJhdG9yXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBtdWwyIG51bWJlciBtdWx0aXBsaWNhdGlvbiBieSAyIHVuYXJ5IG9wZXJhdG9yXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBtdWw1IG51bWJlciBtdWx0aXBsaWNhdGlvbiBieSA1IHVuYXJ5IG9wZXJhdG9yXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBzdWIgbnVtYmVyIHN1YnRyYWN0aW9uIGJpbmFyeSBvcGVyYXRvclxuICogQHBhcmFtIHtmdW5jdGlvbn0gc2h1IG51bWJlciByaWdodCBzaGlmdCBiaW5hcnkgb3BlcmF0b3JcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIF9fZm9ybXVsYV9fICggemVybyAsIG9uZSAsIG5lZ2F0aXZlb25lICwgYWRkICwgbXVsICwgcG93MiAsIG11bDIgLCBtdWw1ICwgc3ViICwgc2h1ICkge1xuXG5cdC8qKlxuXHQgKiBAcGFyYW0ge250aH0gbiA+IDBcblx0ICovXG5cdHZhciBmb3JtdWxhID0gZnVuY3Rpb24gKCBuICkge1xuXG5cdFx0Ly8gVGhlIGNsb3NlZCBmb3JtIGZvcm11bGEgZm9yIHRoZSBudGggRmlib25hY2NpIG51bWJlcnMgaXMsXG5cdFx0Ly9cblx0XHQvLyAgICAgIF8gIC5fLiBuICAgICAgICAgICAgICAgblxuXHRcdC8vICAgICAgIFxcX3xfLyAgICAgICAgICAgIFxcX3xfL1xuXHRcdC8vICAgICAgICAgfCAgICAgICBfX18gICAgICB8XG5cdFx0Ly8gICAgICAgICB8ICAgICAgICAgICAgICAgIHxcblx0XHQvL1xuXHRcdC8vICAgICBfX19fX19fX19fX19fX19fX19fX19fX19fX19cblx0XHQvL1xuXHRcdC8vICAgICAgXyAgLl8uXG5cdFx0Ly8gICAgICAgXFxffF8vICAgICAgICAgICAgXFxffF8vXG5cdFx0Ly8gICAgICAgICB8ICAgICAgIF9fXyAgICAgIHxcblx0XHQvLyAgICAgICAgIHwgICAgICAgICAgICAgICAgfFxuXHRcdC8vXG5cdFx0Ly8gd2hlcmUgcGhpID0gMSArIHNxcnQoNSkgYW5kIHBzaSA9IDEgLSBzcXJ0KDUpXG5cdFx0Ly9cblx0XHQvL1xuXG5cdFx0dmFyIGkgLCBhICwgYiAsIGMgLCBkICwgdyAsIHggLCB5ICwgeiAsIGEyICwgYjIgLCBjMiAsIGQyICwgdzIgLCB4MiAsIHkyICwgejIgO1xuXG5cdFx0Ly8gcGhpID0gKCBhICsgYmkgKSAvIDIgLCBwc2kgPSAoIGMgKyBkaSApIC8gMlxuXG5cdFx0YSA9IG9uZSggKSA7IGIgPSBvbmUoICkgO1xuXHRcdGMgPSBvbmUoICkgOyBkID0gbmVnYXRpdmVvbmUoICkgO1xuXG5cdFx0dyA9IG9uZSggKSA7IHggPSB6ZXJvKCApIDtcblx0XHR5ID0gb25lKCApIDsgeiA9IHplcm8oICkgO1xuXG5cdFx0aSA9IG4gO1xuXG5cdFx0d2hpbGUgKCB0cnVlICkge1xuXG5cdFx0XHRpZiAoIGkgJSAyID09PSAxICkge1xuXG5cdFx0XHRcdHgyID0gYWRkKCBtdWwoIGEgLCB4ICkgLCBtdWwoIGIgLCB3ICkgKSA7XG5cdFx0XHRcdHoyID0gYWRkKCBtdWwoIGMgLCB6ICkgLCBtdWwoIGQgLCB5ICkgKSA7XG5cblx0XHRcdFx0aWYgKCBpID09PSAxICkgYnJlYWsgO1xuXG5cdFx0XHRcdHcyID0gYWRkKCBtdWwoIGEgLCB3ICkgLCBtdWwoIG11bDUoIGIgKSAsIHggKSApIDtcblx0XHRcdFx0eTIgPSBhZGQoIG11bCggYyAsIHkgKSAsIG11bCggbXVsNSggZCApICwgeiApICkgO1xuXG5cdFx0XHRcdHcgPSB3MiA7IHggPSB4MiA7IHkgPSB5MiA7IHogPSB6MiA7XG5cblx0XHRcdH1cblxuXHRcdFx0YTIgPSBhZGQoIHBvdzIoIGEgKSAsIG11bDUoIHBvdzIoIGIgKSApICkgO1xuXHRcdFx0YjIgPSBtdWwyKCBtdWwoIGEgLCBiICkgKSA7XG5cblx0XHRcdGMyID0gYWRkKCBwb3cyKCBjICkgLCBtdWw1KCBwb3cyKCBkICkgKSApIDtcblx0XHRcdGQyID0gbXVsMiggbXVsKCBjICwgZCApICkgO1xuXG5cdFx0XHRhID0gYTIgOyBiID0gYjIgOyBjID0gYzIgOyBkID0gZDIgO1xuXG5cdFx0XHRpID4+Pj0gMSA7XG5cblx0XHR9XG5cblx0XHRyZXR1cm4gc2h1KCBzdWIoIHgyICwgejIgKSAsIG4gKSA7XG5cblx0fSA7XG5cblx0cmV0dXJuIGZvcm11bGEgO1xuXG59XG5cbiJdfQ==